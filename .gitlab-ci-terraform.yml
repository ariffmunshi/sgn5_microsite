# This is the base script which we build our image from
# We modify the Terraform/Base.gitlab-ci.yml template  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Terraform/Base.gitlab-ci.yml

include:
    - local: ".gitlab-ci-base.yml"

stages:
    - tf-validate
    - tf-build
    - tf-deploy

variables:
    TF_ROOT_DEV: "infra/environments/development"
    TF_ROOT_PROD: "infra/environments/production"
    PLAN: "plan.cache"

.tf-base:
    extends: .aws-auth
    image:
        name: "hashicorp/terraform:1.5.5"
    before_script:
        - !reference [.aws-auth, before_script]
        # Change directory
        - cd ${TF_ROOT}

.validate:
    extends: .tf-base
    stage: tf-validate
    script:
        - terraform init -reconfigure
        - terraform validate

.build:
    extends: .tf-base
    stage: tf-build
    artifacts:
        paths:
            - ${TF_ROOT}/${PLAN}
            - ${TF_ROOT}/${ENV_FILE}
    script:
        - terraform init -reconfigure
        - terraform plan -out=${PLAN}
        - terraform output -json > ${ENV_FILE}

.deploy:
    extends: .tf-base
    stage: tf-deploy
    artifacts:
        paths:
            - ${TF_ROOT}/${ENV_FILE}
    script:
        - terraform init -reconfigure
        - terraform apply -input=false ${PLAN}
        - terraform output -json > ${ENV_FILE}

# DEV ENVIRONMENT
validate:dev:
    extends: .validate
    variables:
        TF_ROOT: ${TF_ROOT_DEV}
    rules:
        - changes:
              - ${TF_ROOT_DEV}/**/*
        - when: never

build:dev:
    extends: .build
    variables:
        TF_ROOT: ${TF_ROOT_DEV}
        ENV_FILE: ".env.dev"
    environment:
        name: development
    rules:
        - changes:
              - ${TF_ROOT_DEV}/**/*
        - when: never
        - if: '$CI_COMMIT_BRANCH == "main"'

deploy:dev:
    extends: .deploy
    variables:
        TF_ROOT: ${TF_ROOT_DEV}
        ENV_FILE: ".env.dev"
    environment:
        name: development
    dependencies:
        - build:dev
    resource_group: development
    rules:
        - changes:
              - ${TF_ROOT_DEV}/**/*
        - when: never
        - if: '$CI_COMMIT_BRANCH == "main"'

# PRODUCTION ENVIRONMENT
validate:prod:
    extends: .validate
    variables:
        TF_ROOT: ${TF_ROOT_PROD}
    rules:
        - changes:
              - ${TF_ROOT_PROD}/**/*
        - when: never

build:prod:
    extends: .build
    variables:
        TF_ROOT: ${TF_ROOT_PROD}
        ENV_FILE: ".env.prod"
    environment:
        name: production
    rules:
        - changes:
              - ${TF_ROOT_PROD}/**/*
        - when: never
        - if: '$CI_COMMIT_BRANCH == "main"'

deploy:prod:
    extends: .deploy
    variables:
        TF_ROOT: ${TF_ROOT_PROD}
        ENV_FILE: ".env.prod"
    environment:
        name: production
    dependencies:
        - build:prod
    resource_group: production
    rules:
        - changes:
              - ${TF_ROOT_PROD}/**/*
        - when: never
        - if: '$CI_COMMIT_BRANCH == "main"'
