include:
    - project: "WOG/gvt/ship/ship-hats-templates"
      ref: "v1.0.9"
      file:
          - /templates/.gitlab-ci-common.yml
    - local: ".gitlab-ci-terraform.yml"
    - local: ".gitlab-ci-base.yml"

image: $NEXUSREPO_DOCKER_PROXY_HOSTNAME/node:18-alpine

stages:
    - tf-validate
    - tf-build
    - tf-deploy
    - unit-test
    - static-test # static test after getting output from build
    - runtime-test # runtime testing
    - sign # after all is good for testing, sign the output from build and push to an external repository
    - build
    - deploy-to-dev
    - deploy-to-prod # manual deploy

.deploy-app-base:
    extends: .aws-auth
    image: $NEXUSREPO_DOCKER_PROXY_HOSTNAME/amazon/aws-cli:latest
    script:
        - aws s3 sync app/dist/ s3://${microsite_bucket_name}/ --delete
        - aws cloudfront create-invalidation --distribution-id ${cloudfront_distribution_id} --paths "/*"

# unit-test-app:
#     stage: unit-test
#     script:
#         - cd app
#         - npm install
#         - npm run test:coverage
#     artifacts:
#         paths:
#             - app/coverage

build-app:
    stage: build
    cache:
        paths:
            - app/node_modules
    script:
        - cd app
        - npm ci
        - npm run build
    artifacts:
        paths:
            - app/dist
        expire_in: 1 week

# Deploy to dev environment
deploy-app-dev:
    extends: .deploy-app-base
    stage: deploy-to-dev
    dependencies:
        - build-app
        - deploy:dev
    before_script:
        - !reference [.aws-auth, before_script]
        - find . -name ".env.dev" -type f
        - |
            python -c '
            import json, os
            vars = json.load(open("infra/environments/development/.env.dev"))
            for k, v in vars.items():
              os.environ[k] = str(v["value"])
            '
        - |
            env | grep microsite_bucket_name || echo "Warning: Variables not properly exported"
    environment:
        name: development
    rules:
        - if: '$CI_COMMIT_BRANCH == "main"'

# Deploy to production environment
deploy-app-prod:
    extends: .deploy-app-base
    stage: deploy-to-prod
    dependencies:
        - build-app
        - deploy:prod
    before_script:
        - !reference [.aws-auth, before_script]
        - find . -name ".env.dev" -type f
        - |
            python -c '
            import json, os
            vars = json.load(open("infra/environments/production/.env.prod"))
            for k, v in vars.items():
              os.environ[k] = str(v["value"])
            '
        - |
            env | grep microsite_bucket_name || echo "Warning: Variables not properly exported"
    environment:
        name: production
    when: manual
    rules:
        - if: '$CI_COMMIT_BRANCH == "main"'

ship-sonarqube-scan:
    variables:
        SONAR_PROJECTKEY: SGN-EDB-SGN-SGN5_Microsite
        SONAR_SOURCES: "app/src"

# Disabled jobs
deploy-prod-manual-job:
    rules:
        - when: never
    script:
        - "# Script Not Used."

container_scanning:
    rules:
        - when: never

dast:
    rules:
        - when: never

ship-sonarqube-scan-maven:
    rules:
        - when: never

ship-sonarqube-output-report-maven:
    rules:
        - when: never
